openapi: 3.1.0
info:
  title: accessanalyzer
paths:
  /archive-rule:
    PUT:
      summary: Apply Archive Rule
      description: >-
        <p>Retroactively applies the archive rule to existing findings that meet
        the archive rule criteria.</p>
  /policy/generation/{jobId}:
    GET:
      summary: Get Generated Policy
      description: >-
        <p>Retrieves the policy that was generated using
        <code>StartPolicyGeneration</code>. </p>
  /policy/check-access-not-granted:
    POST:
      summary: Check Access Not Granted
      description: <p>Checks whether the specified access isn't allowed by a policy.</p>
  /policy/check-no-new-access:
    POST:
      summary: Check No New Access
      description: >-
        <p>Checks whether new access is allowed for an updated policy when
        compared to the existing policy.</p> <p>You can find examples for
        reference policies and learn how to set up and run a custom policy check
        for new access in the <a
        href="https://github.com/aws-samples/iam-access-analyzer-custom-policy-check-samples">IAM
        Access Analyzer custom policy checks samples</a> repository on GitHub.
        The reference policies in this repository are meant to be passed to the
        <code>existingPolicyDocument</code> request parameter.</p>
  /access-preview:
    GET:
      summary: ListAccessPreviews
      description: <p>Retrieves a list of access previews for the specified analyzer.</p>
  /analyzer:
    GET:
      summary: ListAnalyzers
      description: <p>Retrieves a list of analyzers.</p>
  /analyzer/{analyzerName}/archive-rule:
    GET:
      summary: ListArchiveRules
      description: >-
        <p>Retrieves a list of archive rules created for the specified
        analyzer.</p>
  /analyzer/{analyzerName}:
    GET:
      summary: GetAnalyzer
      description: <p>Retrieves information about the specified analyzer.</p>
  /analyzer/{analyzerName}/archive-rule/{ruleName}:
    PUT:
      summary: UpdateArchiveRule
      description: <p>Updates the criteria and values for the specified archive rule.</p>
  /access-preview/{accessPreviewId}:
    POST:
      summary: ListAccessPreviewFindings
      description: >-
        <p>Retrieves a list of access preview findings generated by the
        specified access preview.</p>
  /analyzed-resource:
    POST:
      summary: ListAnalyzedResources
      description: >-
        <p>Retrieves a list of resources of the specified type that have been
        analyzed by the specified analyzer..</p>
  /finding/{id}:
    GET:
      summary: GetFinding
      description: <p>Retrieves information about the specified finding.</p>
  /findingv2/{id}:
    GET:
      summary: GetFindingV2
      description: <p>Retrieves information about the specified finding.</p>
  /finding:
    PUT:
      summary: UpdateFindings
      description: <p>Updates the status for the specified findings.</p>
  /findingv2:
    POST:
      summary: ListFindingsV2
      description: >-
        <p>Retrieves a list of findings generated by the specified analyzer.</p>
        <p>To learn about filter keys that you can use to retrieve a list of
        findings, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-filter-keys.html">IAM
        Access Analyzer filter keys</a> in the <b>IAM User Guide</b>.</p>
  /policy/generation:
    PUT:
      summary: StartPolicyGeneration
      description: <p>Starts the policy generation request.</p>
  /tags/{resourceArn}:
    DELETE:
      summary: UntagResource
      description: <p>Removes a tag from the specified resource.</p>
  /resource/scan:
    POST:
      summary: StartResourceScan
      description: >-
        <p>Immediately starts a scan of the policies applied to the specified
        resource.</p>
  /policy/validation:
    POST:
      summary: ValidatePolicy
      description: >-
        <p>Requests the validation of a policy and returns a list of findings.
        The findings help you identify issues and provide actionable
        recommendations to resolve the issue and enable you to author functional
        policies that meet security best practic
