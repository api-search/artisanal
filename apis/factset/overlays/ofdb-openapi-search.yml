openapi: 3.0.0
info:
  title: OFDB API
  license:
    name: Apache License, Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
tags:
  - name: Add
    description: Add new data to a database
  - name: Create
    description: Create a new database
  - name: Delete
    description: Delete data from a database
  - name: Get
    description: Get data from a database
  - name: Long Running
    description: Secondary helper routes for long running requests
  - name: Update
    description: Update existing data in a database
paths:
  /database/jobs/{id}/status:
    get:
      tags:
        - Long Running
      description: >-
        Returns the current status of a long running request. The full URL is
        normally provided for you in the Location header of a long running
        response.
  /database/{path}/audit:
    get:
      tags:
        - Get
      description: >-
        Returns a list of the most recent "modificationTimes" in long datetime
        format
  /database/{path}/audit/jobs/{id}:
    get:
      tags:
        - Long Running
      description: >-
        Returns the end results of a long running request. The full URL is
        normally provided for you in the Location header of a finished long
        running response.
  /database/{path}/stats:
    get:
      tags:
        - Get
      description: Returns a summary of OFDB metadata and data points
  /database/{path}/stats/jobs/{id}:
    get:
      tags:
        - Long Running
      description: >-
        Returns the end results of a long running request. The full URL is
        normally provided for you in the Location header of a finished long
        running response.
  /database/{path}/fields:
    get:
      tags:
        - Get
      description: Returns all the fields in the database(OFDB, OMS_OFDB, ECONOFDB)
    post:
      tags:
        - Add
      description: Allows users to add fields to existing OFDBs
  /database/{path}/fields/jobs/{id}:
    get:
      tags:
        - Long Running
      description: >-
        Returns the end results of a long running request. The full URL is
        normally provided for you in the Location header of a finished long
        running response.
  /database/{path}/delete:
    post:
      tags:
        - Delete
      description: >-
        Allows users to delete various combinations of symbols, dates, and
        fields from the desired OFDB
  /database/{path}/delete/jobs/{id}:
    get:
      tags:
        - Long Running
      description: >-
        Returns the end results of a long running request. The full URL is
        normally provided for you in the Location header of a finished long
        running response.
  /database/{path}/symbols:
    get:
      tags:
        - Get
      description: Returns all the symbols in the database(OFDB, OMS_OFDB, ECONOFDB)
    post:
      tags:
        - Add
      description: >-
        Creates a new symbol with single/multiple dates for 3d database(OFDB).
        Creates a symbol for 2d database(OFDB)
    put:
      tags:
        - Update
      description: >-
        Updates existing symbols for single/multiple dates or adds a new
        symbol/date within a symbol if not present in 3d database(OFDB). Updates
        an existing symbol field value or adds a new symbol if not present in
        the 2d database(OFDB)
  /database/{path}/symbols/jobs/{id}:
    get:
      tags:
        - Long Running
      description: >-
        Returns the end results of a long running request. The full URL is
        normally provided for you in the Location header of a finished long
        running response.
  /database/{path}/symbols/{symbol}:
    put:
      tags:
        - Update
      description: >-
        Updates an existing symbol field value for single/multiple dates or adds
        a new symbol/date within a symbol if not present in 3d database(OFDB).
        Updates an existing symbol field value or adds a new symbol if not
        present in the 2d database(OFDB)
    delete:
      tags:
        - Delete
      description: >-
        Deletes all data specific to the symbol in both 2d and 3d
        database(OFDB). This includes all the dates related to that symbols in
        3d database(OFDB)
  /database/{path}/symbols/{symbol}/jobs/{id}:
    get:
      tags:
        - Long Running
      description: >-
        Returns the end results of a long running request. The full URL is
        normally provided for you in the Location header of a finished long
        running response.
  /database/{path}/dates:
    get:
      tags:
        - Get
      description: Returns all the dates in the database(OFDB, OMS_OFDB, ECONOFDB)
    post:
      tags:
        - Add
      description: Creates a new date with single/multiple symbols for a 3d database(OFDB).
    put:
      tags:
        - Update
      description: >-
        Updates existing dates for single/multiple symbols or adds a new
        date/symbol within a date if not present in 3d database(OFDB).
  /database/{path}/dates/jobs/{id}:
    get:
      tags:
        - Long Running
      description: >-
        Returns the end results of a long running request. The full URL is
        normally provided for you in the Location header of a finished long
        running response.
  /database/{path}/dates/{date}:
    put:
      tags:
        - Update
      description: >-
        Updates an existing date field value for single/multiple symbols or adds
        a new date/symbol within a date if not present in 3d database(OFDB).
    delete:
      tags:
        - Delete
      description: >-
        Deletes all data specific to the date in 3d database(OFDB). This
        includes all the symbols related to that date
  /database/{path}/dates/{date}/jobs/{id}:
    get:
      tags:
        - Long Running
      description: >-
        Returns the end results of a long running request. The full URL is
        normally provided for you in the Location header of a finished long
        running response.
  /database/{path}/dates/{date}/symbols/{symbol}:
    delete:
      tags:
        - Delete
      description: Deletes data specific to the symbol and date from a 3d database(OFDB).
  /database/{path}/dates/{date}/symbols/{symbol}/jobs/{id}:
    delete:
      tags:
        - Delete
      description: Deletes data specific to the symbol and date from a 3d database(OFDB).
  /database/{path}:
    get:
      tags:
        - Get
      description: >-
        Returns the data in the database(OFDB, OMS_OFDB, ECONOFDB) for the
        mentioned Symbol or Date. Atleast one parameter(Symbol/Date) is
        required. For a range of dates symbol parameter is mandatory.
  /database/{path}/jobs/{id}:
    get:
      tags:
        - Long Running
      description: >-
        Returns the end results of a long running request. The full URL is
        normally provided for you in the Location header of a finished long
        running response.
  /database:
    post:
      operationId: createDatabase
      tags:
        - Create
      description: >-
        Creates a 2d or 3d database(OFDB). Users will note that not every field
        requires all the parameters listed in the schema. Please review FactSet
        data types on the OA for further guidance.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseSchema'
      responses:
        '202':
          $ref: '#/components/responses/202LongRunningResponse'
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
  /database/jobs/{id}:
    get:
      operationId: getResourceDatabase
      tags:
        - Long Running
      description: >-
        Returns the end results of a long running request. The full URL is
        normally provided for you in the Location header of a finished long
        running response.
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      responses:
        '200':
          description: Creates and responds with ofdb path
          headers:
            X-DataDirect-Request-Key:
              $ref: '#/components/headers/X-DataDirect-Request-Key'
            X-FactSet-Api-Request-Key:
              $ref: '#/components/headers/X-FactSet-Api-Request-Key'
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatabase'
          links:
            GetDataByPath:
              operationId: GetData
              parameters:
                path: $response.body#/path
              description: >
                The `path` value returned in the response can be used as the
                `path` parameter in `GET /v1/database/{path}/data`.
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/ofdb-api
ngResponse'
        '204':
          $ref: '#/components/responses/204Response'
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
  /database/{path}/dates/{date}/symbols/{symbol}/jobs/{id}:
    delete:
      operationId: getResourceDateFromSymbol
      tags:
        - Delete
      description: Deletes data specific to the symbol and date from a 3d database(OFDB).
      parameters:
        - $ref: '#/components/parameters/databaseLocationPathParam'
        - $ref: '#/components/parameters/datePathParam'
        - $ref: '#/components/parameters/symbolPathParam'
        - $ref: '#/components/parameters/idPathParam'
      responses:
        '200':
          $ref: '#/components/responses/202LongRunningResponse'
        '204':
          $ref: '#/components/responses/204Response'
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
  /database/{path}:
    get:
      operationId: getData
      tags:
        - Get
      description: >-
        Returns the data in the database(OFDB, OMS_OFDB, ECONOFDB) for the
        mentioned Symbol or Date. Atleast one parameter(Symbol/Date) is
        required. For a range of dates symbol parameter is mandatory.
      parameters:
        - $ref: '#/components/parameters/databaseLocationPathParam'
        - name: symbol
          in: query
          description: Returns data for the symbol mentioned. e.g:sym1
          schema:
            type: string
        - name: date
          in: query
          description: >-
            Return data for the specific date or range of dates
            mentioned.e.g:[date1,date2]
          style: form
          explode: false
          schema:
            type: string
        - name: filterFields
          in: query
          description: >
            Can specify the fields on which you want to perform field filter
            operations e.g: ["PRICE","SECTOR"]


            Note:


            The request will respond with 400

            1. If fields which are not present on OFDB are given.

            2. If filterOps or filterValues query parameters are missing
               when filterFields is present.
            3. If number of values given for filterOps, 
                filterFields, filterValues are different
            4. If exactly one of symbol or date query parameter is not provided.
          style: form
          explode: false
          schema:
            type: string
        - name: filterOps
          in: query
          description: >
            Can specify the field filter operations which you want to perform
            e.g: ["LT", "GTEQ", "CT"]

            in respective order of values in filterFields query parameter.


            The available field filter operations are :


            For CHAR type fields:


            "CT" : contains


            "SW" : starts-with


            "EW" : ends-with 


            "EQ" : equals


            For NUMERIC type fields:


            "GT" : greater than


            "GTEQ" : greater than or equals


            "LT" : lesser than


            "LTEQ" : lesser than or equals


            "EQ" : equals


            Note:


            The request will respond with 400 

            1. If operations other than the above mentioned are provided.

            2. If numeric operations are given to char type fields instead of
            char operations.

            3. If char operations are given to numeric type fields instead of
            numeric operations.

            4. If filterFields or filterValues query parameters are missing
               when filterOps is present.
            5. If number of values given for filterOps, 
                filterFields, filterValues are different
            6. If exactly one of symbol or date query parameter is not provided.
          style: form
          explode: false
          schema:
            type: string
        - name: filterValues
          in: query
          description: >
            Can specify the field filter values of the field filter operations
            e.g: [100, 20, "AB"]

            in respective order of values in filterFields and filterOps query
            parameters .


            Note: 


            The request will respond with 400

            1. If char values are given to numeric type fields.

            2. If filterFields or filterOps query parameters are missing
               when filterValues is present.
            3. If number of values given for filterOps, 
                filterFields, filterValues are different
            4. If exactly one of symbol or date query parameter is not provided.
          style: form
          explode: false
          schema:
            type: string
        - name: filterDatesOps
          in: query
          description: >
            Can specify the date filter operations which you want to perform
            e.g: ["LT", "GTEQ"].


            The available date filter operations are :


            "GT" : after


            "GTEQ" : after or equals


            "LT" : before


            "LTEQ" : before or equals


            "EQ" : equals"


            Note:


            The request will respond with 400 

            1. If operations other than the above mentioned are given.

            2. If filterDatesValues query parameter is missing when
            filterDatesOps is present.

            3. If number of values given for filterDatesOps and
            filterDatesValues differ.

            4. If symbol query parameter is not provided.
          style: form
          explode: false
          schema:
            type: string
        - name: filterDatesValues
          in: query
          description: >
            Can specify the date filter values of the date filter operations
            e.g: [20200505, 20200303]

            in respective order of values in filterDatesOps query parameter.


            Note:


            The request will respond with 400

            1. If invalid date values are given

            2. If filterDatesOps query parameter is missing when
            filterDatesValues is present.

            3. If number of values given for filterDatesOps and
            filterDatesValues differ.

            4. If symbol query parameter is not provided.
          style: form
          explode: false
          schema:
            type: string
        - name: filterSymbolsOps
          in: query
          description: >
            Can specify the symbol filter operations which you want to perform
            e.g: ["CT", "SW"].


            The available symbol filter operations are:


            "SW" : starts-with


            "EW" : ends-with


            "CT" : contains


            "EQ" : equals


            Note:


            The request will respond with 400

            1. If operations other than the above mentioned are given.

            2. If filterSymbolsValues query parameter is missing when
            filterSymbolsOps is present.

            3. If number of values given for filterSymbolsOps and
            filterSymbolsValues differ.

            4. If date query parameter is not provided.
          style: form
          explode: false
          schema:
            type: string
        - name: filterSymbolsValues
          in: query
          description: >
            Can specify the symbol filter values of the date filter operations
            e.g: ["ab", "xy"]

            in respective order of values in filterSymbolsOps query parameter.


            Note:

            The request will respond with 400

            1. If filterSymbolsOps query parameter is missing when
            filterSymbolsValues is present.

            2. If number of values given for filterSymbolsOps and
            filterSymbolsValues differ.

            3. If date query parameter is not provided.
          style: form
          explode: false
          schema:
            type: string
        - name: sortFieldName
          in: query
          description: >-
            Can specify the name of field with respect to which user wants to
            sort data 


            Note:

            The request will respond with 400, If a field which doesn't exist in
            the OFDB is requested
          style: form
          explode: false
          schema:
            type: string
        - name: sortFieldOrder
          in: query
          description: >-
            Can specify the order in which user wants to sort data with respect
            to sortFieldName query parameter 


            Note:

            The request will respond with 400, If value other than asc or desc
            is requested
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '202':
          $ref: '#/components/responses/202LongRunningResponse'
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
  /database/{path}/jobs/{id}:
    get:
      operationId: getResourceData
      tags:
        - Long Running
      description: >-
        Returns the end results of a long running request. The full URL is
        normally provided for you in the Location header of a finished long
        running response.
      parameters:
        - $ref: '#/components/parameters/databaseLocationPathParam'
        - $ref: '#/components/parameters/idPathParam'
      responses:
        '200':
          $ref: '#/components/responses/200GetData'
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
  /database:
    post:
      operationId: createDatabase
      tags:
        - Create
      description: >-
        Creates a 2d or 3d database(OFDB). Users will note that not every field
        requires all the parameters listed in the schema. Please review FactSet
        data types on the OA for further guidance.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseSchema'
      responses:
        '202':
          $ref: '#/components/responses/202LongRunningResponse'
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
  /database/jobs/{id}:
    get:
      operationId: getResourceDatabase
      tags:
        - Long Running
      description: >-
        Returns the end results of a long running request. The full URL is
        normally provided for you in the Location header of a finished long
        running response.
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      responses:
        '200':
          description: Creates and responds with ofdb path
          headers:
            X-DataDirect-Request-Key:
              $ref: '#/components/headers/X-DataDirect-Request-Key'
            X-FactSet-Api-Request-Key:
              $ref: '#/components/headers/X-FactSet-Api-Request-Key'
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatabase'
          links:
            GetDataByPath:
              operationId: GetData
              parameters:
                path: $response.body#/path
              description: >
                The `path` value returned in the response can be used as the
                `path` parameter in `GET /v1/database/{path}/data`.
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/ofdb-api


            3. If number of values given for filterDatesOps and
            filterDatesValues differ.

            4. If symbol query parameter is not provided.
          style: form
          explode: false
          schema:
            type: string
        - name: filterSymbolsOps
          in: query
          description: >
            Can specify the symbol filter operations which you want to perform
            e.g: ["CT", "SW"].


            The available symbol filter operations are:


            "SW" : starts-with


            "EW" : ends-with


            "CT" : contains


            "EQ" : equals


            Note:


            The request will respond with 400

            1. If operations other than the above mentioned are given.

            2. If filterSymbolsValues query parameter is missing when
            filterSymbolsOps is present.

            3. If number of values given for filterSymbolsOps and
            filterSymbolsValues differ.

            4. If date query parameter is not provided.
          style: form
          explode: false
          schema:
            type: string
        - name: filterSymbolsValues
          in: query
          description: >
            Can specify the symbol filter values of the date filter operations
            e.g: ["ab", "xy"]

            in respective order of values in filterSymbolsOps query parameter.


            Note:

            The request will respond with 400

            1. If filterSymbolsOps query parameter is missing when
            filterSymbolsValues is present.

            2. If number of values given for filterSymbolsOps and
            filterSymbolsValues differ.

            3. If date query parameter is not provided.
          style: form
          explode: false
          schema:
            type: string
        - name: sortFieldName
          in: query
          description: >-
            Can specify the name of field with respect to which user wants to
            sort data 


            Note:

            The request will respond with 400, If a field which doesn't exist in
            the OFDB is requested
          style: form
          explode: false
          schema:
            type: string
        - name: sortFieldOrder
          in: query
          description: >-
            Can specify the order in which user wants to sort data with respect
            to sortFieldName query parameter 


            Note:

            The request will respond with 400, If value other than asc or desc
            is requested
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '202':
          $ref: '#/components/responses/202LongRunningResponse'
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
  /database/{path}/jobs/{id}:
    get:
      operationId: getResourceData
      tags:
        - Long Running
      description: >-
        Returns the end results of a long running request. The full URL is
        normally provided for you in the Location header of a finished long
        running response.
      parameters:
        - $ref: '#/components/parameters/databaseLocationPathParam'
        - $ref: '#/components/parameters/idPathParam'
      responses:
        '200':
          $ref: '#/components/responses/200GetData'
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
  /database:
    post:
      operationId: createDatabase
      tags:
        - Create
      description: >-
        Creates a 2d or 3d database(OFDB). Users will note that not every field
        requires all the parameters listed in the schema. Please review FactSet
        data types on the OA for further guidance.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseSchema'
      responses:
        '202':
          $ref: '#/components/responses/202LongRunningResponse'
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
  /database/jobs/{id}:
    get:
      operationId: getResourceDatabase
      tags:
        - Long Running
      description: >-
        Returns the end results of a long running request. The full URL is
        normally provided for you in the Location header of a finished long
        running response.
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      responses:
        '200':
          description: Creates and responds with ofdb path
          headers:
            X-DataDirect-Request-Key:
              $ref: '#/components/headers/X-DataDirect-Request-Key'
            X-FactSet-Api-Request-Key:
              $ref: '#/components/headers/X-FactSet-Api-Request-Key'
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatabase'
          links:
            GetDataByPath:
              operationId: GetData
              parameters:
                path: $response.body#/path
              description: >
                The `path` value returned in the response can be used as the
                `path` parameter in `GET /v1/database/{path}/data`.
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/ofdb-api
 1. If filterSymbolsOps query parameter is missing when
            filterSymbolsValues is present.

            2. If number of values given for filterSymbolsOps and
            filterSymbolsValues differ.

            3. If date query parameter is not provided.
          style: form
          explode: false
          schema:
            type: string
        - name: sortFieldName
          in: query
          description: >-
            Can specify the name of field with respect to which user wants to
            sort data 


            Note:

            The request will respond with 400, If a field which doesn't exist in
            the OFDB is requested
          style: form
          explode: false
          schema:
            type: string
        - name: sortFieldOrder
          in: query
          description: >-
            Can specify the order in which user wants to sort data with respect
            to sortFieldName query parameter 


            Note:

            The request will respond with 400, If value other than asc or desc
            is requested
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '202':
          $ref: '#/components/responses/202LongRunningResponse'
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
  /database/{path}/jobs/{id}:
    get:
      operationId: getResourceData
      tags:
        - Long Running
      description: >-
        Returns the end results of a long running request. The full URL is
        normally provided for you in the Location header of a finished long
        running response.
      parameters:
        - $ref: '#/components/parameters/databaseLocationPathParam'
        - $ref: '#/components/parameters/idPathParam'
      responses:
        '200':
          $ref: '#/components/responses/200GetData'
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
  /database:
    post:
      operationId: createDatabase
      tags:
        - Create
      description: >-
        Creates a 2d or 3d database(OFDB). Users will note that not every field
        requires all the parameters listed in the schema. Please review FactSet
        data types on the OA for further guidance.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseSchema'
      responses:
        '202':
          $ref: '#/components/responses/202LongRunningResponse'
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
  /database/jobs/{id}:
    get:
      operationId: getResourceDatabase
      tags:
        - Long Running
      description: >-
        Returns the end results of a long running request. The full URL is
        normally provided for you in the Location header of a finished long
        running response.
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      responses:
        '200':
          description: Creates and responds with ofdb path
          headers:
            X-DataDirect-Request-Key:
              $ref: '#/components/headers/X-DataDirect-Request-Key'
            X-FactSet-Api-Request-Key:
              $ref: '#/components/headers/X-FactSet-Api-Request-Key'
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatabase'
          links:
            GetDataByPath:
              operationId: GetData
              parameters:
                path: $response.body#/path
              description: >
                The `path` value returned in the response can be used as the
                `path` parameter in `GET /v1/database/{path}/data`.
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/ofdb-api
   description: >
                The `path` value returned in the response can be used as the
                `path` parameter in `GET /v1/database/{path}/data`.
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/ofdb-api
etData
              parameters:
                path: $response.body#/path
              description: >
                The `path` value returned in the response can be used as the
                `path` parameter in `GET /v1/database/{path}/data`.
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/ofdb-api
scription: >
                The `path` value returned in the response can be used as the
                `path` parameter in `GET /v1/database/{path}/data`.
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/ofdb-api
bs/{id}:
    get:
      operationId: getResourceDatabase
      tags:
        - Long Running
      description: >-
        Returns the end results of a long running request. The full URL is
        normally provided for you in the Location header of a finished long
        running response.
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      responses:
        '200':
          description: Creates and responds with ofdb path
          headers:
            X-DataDirect-Request-Key:
              $ref: '#/components/headers/X-DataDirect-Request-Key'
            X-FactSet-Api-Request-Key:
              $ref: '#/components/headers/X-FactSet-Api-Request-Key'
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatabase'
          links:
            GetDataByPath:
              operationId: GetData
              parameters:
                path: $response.body#/path
              description: >
                The `path` value returned in the response can be used as the
                `path` parameter in `GET /v1/database/{path}/data`.
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/ofdb-api
ription: >
                The `path` value returned in the response can be used as the
                `path` parameter in `GET /v1/database/{path}/data`.
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/ofdb-api
d in the response can be used as the
                `path` parameter in `GET /v1/database/{path}/data`.
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/ofdb-api
ription: >
                The `path` value returned in the response can be used as the
                `path` parameter in `GET /v1/database/{path}/data`.
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/ofdb-api
d in the response can be used as the
                `path` parameter in `GET /v1/database/{path}/data`.
        '400':
          $ref: '#/components/responses/400Response'
        '403':
          $ref: '#/components/responses/403Response'
        '404':
          $ref: '#/components/responses/404Response'
        '406':
          $ref: '#/components/responses/406Response'
        '429':
          $ref: '#/components/responses/429Response'
        '500':
          $ref: '#/components/responses/500Response'
        '503':
          $ref: '#/components/responses/503Response'
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/ofdb-api
