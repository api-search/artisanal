openapi: 3.0.3
info:
  title: Portfolio Metadata
  license:
    name: Apache License, Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
paths:
  /account-composite:
    post:
      description: Create a new account composite
      tags:
        - Account Composite
    get:
      description: List account composite
      tags:
        - Account Composite
  /account-composite/{id}:
    delete:
      description: Remove a account composite
      tags:
        - Account Composite
    get:
      description: Read a account composite
      tags:
        - Account Composite
    put:
      description: Modify a account composite
      tags:
        - Account Composite
  /account:
    post:
      description: Create a new account
      tags:
        - Account
    get:
      description: List account
      tags:
        - Account
  /account/{id}:
    delete:
      description: Remove a account
      tags:
        - Account
    get:
      description: Read a account
      tags:
        - Account
    put:
      description: Modify a account
      tags:
        - Account
  /holdings-composite/{id}:
    get:
      description: Read a holdings composite
      tags:
        - Holdings Composite
  /holdings/{id}:
    get:
      operationId: readHoldings
      description: Read a holdings
      tags:
        - Holdings
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 270c2fa8-9110-444b-9101-17e10132fe0a
          description: Unique identifier of the holdings to be read
          example: 270c2fa8-9110-444b-9101-17e10132fe0a
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/readHoldingsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '403':
          $ref: '#/components/responses/ForbiddenErrorResponse'
        '404':
          $ref: '#/components/responses/NotFoundErrorResponse'
        '406':
          $ref: '#/components/responses/NotAcceptableErrorResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedErrorResponse'
  /returns-composite/{id}:
    get:
      operationId: readReturnsComposite
      description: Read a returns composite
      tags:
        - Returns Composite
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 270c2fa8-9110-444b-9101-17e10132fe0a
          description: Unique identifier of the returns composite to be read
          example: 270c2fa8-9110-444b-9101-17e10132fe0a
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/readReturnsCompositeResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '403':
          $ref: '#/components/responses/ForbiddenErrorResponse'
        '404':
          $ref: '#/components/responses/NotFoundErrorResponse'
        '406':
          $ref: '#/components/responses/NotAcceptableErrorResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedErrorResponse'
  /returns/{id}:
    get:
      operationId: readReturns
      description: Read a returns
      tags:
        - Returns
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 270c2fa8-9110-444b-9101-17e10132fe0a
          description: Unique identifier of the returns to be read
          example: 270c2fa8-9110-444b-9101-17e10132fe0a
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/readReturnsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '403':
          $ref: '#/components/responses/ForbiddenErrorResponse'
        '404':
          $ref: '#/components/responses/NotFoundErrorResponse'
        '406':
          $ref: '#/components/responses/NotAcceptableErrorResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedErrorResponse'
  /trade-data/{id}:
    get:
      operationId: readTradeData
      description: Read a trade data
      tags:
        - Trade Data
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 270c2fa8-9110-444b-9101-17e10132fe0a
          description: Unique identifier of the trade data to be read
          example: 270c2fa8-9110-444b-9101-17e10132fe0a
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/readTradeDataResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '403':
          $ref: '#/components/responses/ForbiddenErrorResponse'
        '404':
          $ref: '#/components/responses/NotFoundErrorResponse'
        '406':
          $ref: '#/components/responses/NotAcceptableErrorResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedErrorResponse'
  /user-defined-field-group:
    get:
      operationId: listUserDefinedFieldGroups
      description: List user defined groups
      tags:
        - User Defined Field Group
      parameters:
        - name: name
          in: query
          required: false
          schema:
            type: string
            example: string
          description: Return only files whose name includes this query
        - name: _paginationLimit
          in: query
          required: false
          schema:
            type: number
            default: 100
            example: 0
          description: Number of groups to return
        - name: _paginationCursor
          in: query
          required: false
          schema:
            type: string
            example: string
          description: Cursor used for paging.  Fetch items after the specified cursor
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listUserDefinedFieldGroupsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '403':
          $ref: '#/components/responses/ForbiddenErrorResponse'
        '404':
          $ref: '#/components/responses/NotFoundErrorResponse'
        '406':
          $ref: '#/components/responses/NotAcceptableErrorResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedErrorResponse'
  /user-defined-field-group/{id}:
    get:
      operationId: readUserDefinedGroup
      description: Read a specific user defined field group and list its fields.
      tags:
        - User Defined Field Group
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 270c2fa8-9110-444b-9101-17e10132fe0a
          description: Unique identifer for the group to be read.
        - name: _paginationLimit
          in: query
          required: false
          schema:
            type: number
            default: 100
            example: 0
          description: Number of fields to list from this group
        - name: _paginationCursor
          in: query
          required: false
          schema:
            type: string
            example: string
          description: Cursor used for paging.  Fetch fields after the specified cursor
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/readUserDefinedGroupResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '403':
          $ref: '#/components/responses/ForbiddenErrorResponse'
        '404':
          $ref: '#/components/responses/NotFoundErrorResponse'
        '406':
          $ref: '#/components/responses/NotAcceptableErrorResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedErrorResponse'
  /user-defined-field:
    get:
      operationId: listUserDefinedFields
      description: List user defined fields
      tags:
        - User Defined Field
      parameters:
        - name: database
          in: query
          required: false
          schema:
            type: string
            enum:
              - CLIENT
              - FACTSET
              - SUPER_CLIENT
            default: CLIENT
            example: CLIENT
          description: Database where the fields are defined.
        - name: name
          in: query
          required: false
          schema:
            type: string
            example: string
          description: Return only fields whose name includes this query
        - name: group
          in: query
          required: false
          schema:
            type: string
            example: string
          description: Return only fields whose group includes this query
        - name: _paginationLimit
          in: query
          required: false
          schema:
            type: number
            default: 100
            example: 0
          description: Number of fields to return
        - name: _paginationCursor
          in: query
          required: false
          schema:
            type: string
            example: string
          description: Cursor used for paging.  Fetch items after the specified cursor
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listUserDefinedFieldsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '403':
          $ref: '#/components/responses/ForbiddenErrorResponse'
        '404':
          $ref: '#/components/responses/NotFoundErrorResponse'
        '406':
          $ref: '#/components/responses/NotAcceptableErrorResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedErrorResponse'
  /user-defined-field/{id}:
    get:
      operationId: readUserDefinedField
      description: Read a user defined field
      tags:
        - User Defined Field
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 270c2fa8-9110-444b-9101-17e10132fe0a
          description: Unique identifier of the user defined field to be read
          example: 270c2fa8-9110-444b-9101-17e10132fe0a
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/readUserDefinedFieldResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '403':
          $ref: '#/components/responses/ForbiddenErrorResponse'
        '404':
          $ref: '#/components/responses/NotFoundErrorResponse'
        '406':
          $ref: '#/components/responses/NotAcceptableErrorResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedErrorResponse'
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/portfolio-metadata-api
tags:
  - name: Account
    description: CRUD operations on Account
  - name: Account Composite
    description: CRUD operations on Account Composite
  - name: Holdings
    description: CRUD operations on Holdings
  - name: Holdings Composite
    description: CRUD operations on Holdings Composite
  - name: Returns
    description: CRUD operations on Returns
  - name: Returns Composite
    description: CRUD operations on Returns Composite
  - name: Trade Data
    description: CRUD operations on Trade Data
  - name: User Defined Field
    description: CRUD operations on User Defined Field
  - name: User Defined Field Group
    description: CRUD operations on User Defined Field Group
      '404':
          $ref: '#/components/responses/NotFoundErrorResponse'
        '406':
          $ref: '#/components/responses/NotAcceptableErrorResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedErrorResponse'
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/portfolio-metadata-api
tags:
  - name: Account
    description: CRUD operations on Account
  - name: Account Composite
    description: CRUD operations on Account Composite
  - name: Holdings
    description: CRUD operations on Holdings
  - name: Holdings Composite
    description: CRUD operations on Holdings Composite
  - name: Returns
    description: CRUD operations on Returns
  - name: Returns Composite
    description: CRUD operations on Returns Composite
  - name: Trade Data
    description: CRUD operations on Trade Data
  - name: User Defined Field
    description: CRUD operations on User Defined Field
  - name: User Defined Field Group
    description: CRUD operations on User Defined Field Group
the fields are defined.
        - name: name
          in: query
          required: false
          schema:
            type: string
            example: string
          description: Return only fields whose name includes this query
        - name: group
          in: query
          required: false
          schema:
            type: string
            example: string
          description: Return only fields whose group includes this query
        - name: _paginationLimit
          in: query
          required: false
          schema:
            type: number
            default: 100
            example: 0
          description: Number of fields to return
        - name: _paginationCursor
          in: query
          required: false
          schema:
            type: string
            example: string
          description: Cursor used for paging.  Fetch items after the specified cursor
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listUserDefinedFieldsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '403':
          $ref: '#/components/responses/ForbiddenErrorResponse'
        '404':
          $ref: '#/components/responses/NotFoundErrorResponse'
        '406':
          $ref: '#/components/responses/NotAcceptableErrorResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedErrorResponse'
  /user-defined-field/{id}:
    get:
      operationId: readUserDefinedField
      description: Read a user defined field
      tags:
        - User Defined Field
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 270c2fa8-9110-444b-9101-17e10132fe0a
          description: Unique identifier of the user defined field to be read
          example: 270c2fa8-9110-444b-9101-17e10132fe0a
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/readUserDefinedFieldResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '403':
          $ref: '#/components/responses/ForbiddenErrorResponse'
        '404':
          $ref: '#/components/responses/NotFoundErrorResponse'
        '406':
          $ref: '#/components/responses/NotAcceptableErrorResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedErrorResponse'
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/portfolio-metadata-api
tags:
  - name: Account
    description: CRUD operations on Account
  - name: Account Composite
    description: CRUD operations on Account Composite
  - name: Holdings
    description: CRUD operations on Holdings
  - name: Holdings Composite
    description: CRUD operations on Holdings Composite
  - name: Returns
    description: CRUD operations on Returns
  - name: Returns Composite
    description: CRUD operations on Returns Composite
  - name: Trade Data
    description: CRUD operations on Trade Data
  - name: User Defined Field
    description: CRUD operations on User Defined Field
  - name: User Defined Field Group
    description: CRUD operations on User Defined Field Group
ription: Cursor used for paging.  Fetch items after the specified cursor
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listUserDefinedFieldsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '403':
          $ref: '#/components/responses/ForbiddenErrorResponse'
        '404':
          $ref: '#/components/responses/NotFoundErrorResponse'
        '406':
          $ref: '#/components/responses/NotAcceptableErrorResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedErrorResponse'
  /user-defined-field/{id}:
    get:
      operationId: readUserDefinedField
      description: Read a user defined field
      tags:
        - User Defined Field
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 270c2fa8-9110-444b-9101-17e10132fe0a
          description: Unique identifier of the user defined field to be read
          example: 270c2fa8-9110-444b-9101-17e10132fe0a
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/readUserDefinedFieldResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '403':
          $ref: '#/components/responses/ForbiddenErrorResponse'
        '404':
          $ref: '#/components/responses/NotFoundErrorResponse'
        '406':
          $ref: '#/components/responses/NotAcceptableErrorResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedErrorResponse'
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/portfolio-metadata-api
tags:
  - name: Account
    description: CRUD operations on Account
  - name: Account Composite
    description: CRUD operations on Account Composite
  - name: Holdings
    description: CRUD operations on Holdings
  - name: Holdings Composite
    description: CRUD operations on Holdings Composite
  - name: Returns
    description: CRUD operations on Returns
  - name: Returns Composite
    description: CRUD operations on Returns Composite
  - name: Trade Data
    description: CRUD operations on Trade Data
  - name: User Defined Field
    description: CRUD operations on User Defined Field
  - name: User Defined Field Group
    description: CRUD operations on User Defined Field Group
            default: CLIENT
            example: CLIENT
          description: Database where the fields are defined.
        - name: name
          in: query
          required: false
          schema:
            type: string
            example: string
          description: Return only fields whose name includes this query
        - name: group
          in: query
          required: false
          schema:
            type: string
            example: string
          description: Return only fields whose group includes this query
        - name: _paginationLimit
          in: query
          required: false
          schema:
            type: number
            default: 100
            example: 0
          description: Number of fields to return
        - name: _paginationCursor
          in: query
          required: false
          schema:
            type: string
            example: string
          description: Cursor used for paging.  Fetch items after the specified cursor
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listUserDefinedFieldsResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '403':
          $ref: '#/components/responses/ForbiddenErrorResponse'
        '404':
          $ref: '#/components/responses/NotFoundErrorResponse'
        '406':
          $ref: '#/components/responses/NotAcceptableErrorResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedErrorResponse'
  /user-defined-field/{id}:
    get:
      operationId: readUserDefinedField
      description: Read a user defined field
      tags:
        - User Defined Field
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 270c2fa8-9110-444b-9101-17e10132fe0a
          description: Unique identifier of the user defined field to be read
          example: 270c2fa8-9110-444b-9101-17e10132fe0a
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/readUserDefinedFieldResponse'
        '400':
          $ref: '#/components/responses/BadRequestErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedErrorResponse'
        '403':
          $ref: '#/components/responses/ForbiddenErrorResponse'
        '404':
          $ref: '#/components/responses/NotFoundErrorResponse'
        '406':
          $ref: '#/components/responses/NotAcceptableErrorResponse'
        '415':
          $ref: '#/components/responses/UnsupportedMediaTypeErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
        '501':
          $ref: '#/components/responses/NotImplementedErrorResponse'
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/portfolio-metadata-api
tags:
  - name: Account
    description: CRUD operations on Account
  - name: Account Composite
    description: CRUD operations on Account Composite
  - name: Holdings
    description: CRUD operations on Holdings
  - name: Holdings Composite
    description: CRUD operations on Holdings Composite
  - name: Returns
    description: CRUD operations on Returns
  - name: Returns Composite
    description: CRUD operations on Returns Composite
  - name: Trade Data
    description: CRUD operations on Trade Data
  - name: User Defined Field
    description: CRUD operations on User Defined Field
  - name: User Defined Field Group
    description: CRUD operations on User Defined Field Group
