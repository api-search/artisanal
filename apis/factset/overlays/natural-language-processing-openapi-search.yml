openapi: 3.0.1
info:
  title: Natural Language Processing API
  license:
    name: Apache License, Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
tags:
  - name: AI Text Summarization
  - name: AI Themes
  - name: Named Entity Recognition
  - name: Question & Answer
paths:
  /themes:
    post:
      description: >-
        Endpoint to extract themes from provided text. Optionally, can include
        sentiment for each theme extracted. Please check the schema(s) for each
        of the status codes for more details.
      summary: Endpoint to begin theme extraction job
      tags:
        - Endpoint
        - To
        - Begin
        - Theme
        - Extraction
        - Job
        - Themes
  /themes/{id}:
    get:
      description: >-
        Endpoint to obtain the results from the original themes task request.
        The `id` parameter represents the identifier of the task generated from
        the POST request which created the task. Once the task is complete, the
        result can be fetched with this endpoint.
      summary: Endpoint to get a theme (and sentiments if requested) job result
      tags:
        - Endpoint
        - To
        - Get
        - Theme
        - (and
        - Sentiments
        - If
        - Requested)
        - Job
        - Result
        - Themes
        - Id
  /themes/{id}/status:
    get:
      description: >-
        Endpoint to obtain the completion status of the themes task request. The
        `id` parameter represents the task.
      summary: Endpoint to get the completion status of a themes job
      tags:
        - Endpoint
        - To
        - Get
        - The
        - Completion
        - Status
        - Of
        - Themes
        - Job
        - Themes
        - Id
        - Status
  /summarization/headline:
    post:
      summary: Endpoint to generate a headline from text
      description: Generate a headline-length summary of plain text
      tags:
        - Endpoint
        - To
        - Generate
        - Headline
        - From
        - Text
        - Themes
        - Id
        - Status
        - Summarization
        - Headline
  /summarization/headline-and-summary:
    post:
      summary: Endpoint to summarize and generate a headline from text
      description: >-
        Generate both a paragraph-length, and headline-length summary of plain
        text
      tags:
        - Endpoint
        - To
        - Summarize
        - And
        - Generate
        - Headline
        - From
        - Text
        - Themes
        - Id
        - Status
        - Summarization
        - Headline
        - And
        - Summary
  /summarization/summary:
    post:
      summary: Endpoint to summarize text
      description: Generate a paragraph-length summary of plain text
      tags:
        - Endpoint
        - To
        - Summarize
        - Text
        - Themes
        - Id
        - Status
        - Summarization
        - Headline
        - And
        - Summary
  /ner/entities:
    post:
      summary: Endpoint to detect entities from text
      description: Detect entities (People, Places, Organizations, etc.) in plain text
      tags:
        - Endpoint
        - To
        - Detect
        - Entities
        - From
        - Text
        - Themes
        - Id
        - Status
        - Summarization
        - Headline
        - And
        - Summary
        - Ner
        - Entities
  /summarization/result/{resultId}:
    get:
      summary: Endpoint to obtain result of a particular summarization job
      description: >-
        Retrieve the summarization result from a job started with the other
        summarization endpoints
      tags:
        - Endpoint
        - To
        - Obtain
        - Result
        - Of
        - Particular
        - Summarization
        - Job
        - Themes
        - Id
        - Status
        - Summarization
        - Headline
        - And
        - Summary
        - Ner
        - Entities
  /qna/answers:
    post:
      description: >-
        Endpoint to create a task submission by providing plain text and
        question(s). The underlying model will answer the question. The created
        task needs to be polled to obtain the results. Please check the
        schema(s) for each of the status codes for more details about the task.
      summary: Endpoint to submit a question for answer(s)
      tags:
        - Endpoint
        - To
        - Submit
        - Question
        - For
        - Answer(s)
        - Themes
        - Id
        - Status
        - Summarization
        - Headline
        - And
        - Summary
        - Ner
        - Entities
        - Qna
        - Answers
  /qna/answers/{id}:
    get:
      description: >-
        Endpoint to obtain the results from the original Q&A task request. The
        `id` parameter represents the identifier from the task and comes from
        the POST request which created the task. Once the task is complete, the
        result can be fetched with this endpoint.
      summary: Endpoint to get the answer(s)
      tags:
        - Endpoint
        - To
        - Get
        - The
        - Answer(s)
        - Themes
        - Id
        - Status
        - Summarization
        - Headline
        - And
        - Summary
        - Ner
        - Entities
        - Qna
        - Answers
  /qna/answers/{id}/status:
    get:
      description: >-
        Endpoint to obtain the status of the Q&A task request. The `id`
        parameter represents the identifier of the task created and comes from
        the POST request which created the task.
      summary: Endpoint to get the completion status for a Q&A request
      tags:
        - Endpoint
        - To
        - Get
        - The
        - Completion
        - Status
        - For
        - Q&
        - Request
        - Themes
        - Id
        - Status
        - Summarization
        - Headline
        - And
        - Summary
        - Ner
        - Entities
        - Qna
        - Answe
