openapi: 3.0.0
info:
  title: FactSet Prices API
paths:
  /factset-prices/v1/prices:
    get:
      tags:
        - Prices
      summary: Gets end-of-day Open, High, Low, Close for a list of securities.
      description: >
        Gets security prices, Open, High, Low, Close, Volume, and currency for a
        specified date range and frequency. Prices are updated and at different
        times across the different regions around the globe. The Prices API
        automatically defaults relative price dates to the local region which is
        determined by the local region of the requested security id. To learn
        more about relative dates please visit [OA Page
        4627](https://my.apps.factset.com/oa/pages/4627)


        */prices* endpoint currently supports Long Running asynchronous requests
        up to **10 minutes** via `batch` parameter. **Additional Approvals
        needed for access**. Id limits increased to **5000 ids** per request
        using batch parameter.
    post:
      tags:
        - Prices
      summary: >-
        Requests end-of-day Open, High, Low, Close for a large list of
        securities.
      description: >

        Gets security prices, Open, High, Low, Close, Volume, and currency for a
        specified date range and frequency.


        */prices* endpoint currently supports Long Running asynchronous requests
        up to **10 minutes** via `batch` parameter. **Additional Approvals
        needed for access**. Id limits increased to **5000 ids** per request
        using batch parameter.
  /factset-prices/v1/fixed-income:
    get:
      tags:
        - Prices
      summary: Gets pricing for a list of Fixed Income securities
      description: >
        Get BID, MID, ASK, and Issuer Entity ID for a list of Fixed Income
        Securities as of a requested date range. Available for U.S. Corporate,
        Treasury and Agency bonds, Municipals, and non-U.S. Corporate and
        Government bonds. To learn more about Fixed Income Prices database,
        please review [OA:15995](https://my.apps.factset.com/oa/pages/15995)
    post:
      tags:
        - Prices
      summary: >-
        Requests pricing for a list of Fixed Income securities for date range
        requested
      description: >
        Get BID, MID, ASK, and Issuer Entity ID for a list of Fixed Income
        Securities as of a requested date range. Available for U.S. Corporate,
        Treasury and Agency bonds, Municipals, and non-U.S. Corporate and
        Government bonds. To learn more about Fixed Income Prices database,
        please review [OA:15995](https://my.apps.factset.com/oa/pages/15995)
  /factset-prices/v1/references:
    get:
      tags:
        - Reference
      summary: Gets security reference details for a list of securities
      description: >
        Gets security reference details for a list of `ids`, such as Name,
        Security Type, Currency, Country, Primary Exchange, Local Index, and
        dates of First and Last Trade.
    post:
      tags:
        - Reference
      summary: Requests security reference details a list of securities
      description: >
        Gets security reference details for a large list of `ids`, such as Name,
        Security Type, Currency, Country, Primary Exchange, Local Index, and
        dates of First and Last Trade.
  /factset-prices/v1/returns:
    get:
      tags:
        - Returns
      summary: >-
        Gets Returns for a list of `ids` as of given date range and rolling
        Period
      description: >-
        The simple or compound return for the requested frequency and/or
        rollingPeriod. Depending on the input parameters the return will adjust
        accordingly. If you simply use frequency and no rollingPeriod, the
        return value will represent the frequency period. If you use
        rollingPeriod, the values will be returned in actual period ends (e.g.
        actual month, actual week, daily, etc.). General Return Calculation
        Details found on [Online Assistant Page
        #8748](https://oa.apps.factset.com/pages/8748)
    post:
      tags:
        - Returns
      summary: Requests security returns for the given date range and rollingPeriod.
      description: >-
        The simple or compound return for the requested frequency and/or
        rollingPeriod. Depending on the input parameters the return will adjust
        accordingly. If you simply use frequency and no rollingPeriod, the
        return value will represent the frequency period. If you use
        rollingPeriod, the values will be returned in actual period ends (e.g.
        actual month, actual week, daily, etc.). General Return Calculation
        Details found on [Online Assistant Page
        #8748](https://oa.apps.factset.com/pages/8748)
  /factset-prices/v1/returns-snapshot:
    get:
      tags:
        - Returns
      summary: >-
        Returns the price performance of the security and annualized compound
        total returns.
      description: >
        Retrieves various return periods as of a given date for a requested list
        of securities. This endpoint is very helpful for quickly retrieving a
        list of pre-calculated returns for application development.<p> Return
        periods include
          * oneDay
          * weekToDate
          * monthToDate
          * quarterToDate
          * yearToDate
          * oneMonth
          * threeMonth
          * sixMonth
          * nineMonth
          * oneYear
          * twoYearAnnualized
          * threeYearAnnualized
          * fiveYearAnnualized
          * tenYearAnnualized
          * twentyYearAnnualized
          * thirtyYearAnnualized
          * ipoToDateAnnualized
          </p>
    post:
      tags:
        - Returns
      summary: >-
        Returns the price performance of the security and annualized compound
        total returns.
      description: >
        Retrieves various return periods as of a given date for a requested list
        of securities. This endpoint is very helpful for quickly retrieving a
        list of pre-calculated returns for application development.<p> Return
        periods include
          * oneDay
          * weekToDate
          * monthToDate
          * quarterToDate
          * yearToDate
          * oneMonth
          * threeMonth
          * sixMonth
          * nineMonth
          * oneYear
          * twoYearAnnualized
          * threeYearAnnualized
          * fiveYearAnnualized
          * tenYearAnnualized
          * twentyYearAnnualized
          * thirtyYearAnnualized
          * ipoToDateAnnualized
          </p>
  /factset-prices/v1/dividends:
    get:
      tags:
        - Dividends
      summary: Gets dividend information for a given date range and list of securities
      operationId: getSecurityDividends
      description: >-
        Get the dividend amounts, dates, types, and flags over a specified date
        range. You may request future dates to receive information for declared
        dividends.
      parameters:
        - $ref: '#/components/parameters/idsMax1000'
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - $ref: '#/components/parameters/currency'
        - $ref: '#/components/parameters/adjust'
      responses:
        '200':
          description: >-
            Array of security dividend information for a given date range and
            list of securities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dividendsResponse'
              examples:
                Three Years of Dividends for AAPL as of 2019:
                  $ref: '#/components/examples/3yrDividendsAPPL'
                Latest Dividends for AAPL and AMZN:
                  $ref: '#/components/examples/latestDividends'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - Dividends
      summary: >-
        Requests dividend information for a given date range and list of
        securities
      description: >-
        Get the dividend amounts, dates, types, and flags over a specified date
        range
      operationId: getSecurityDividendsForList
      requestBody:
        required: true
        description: Request object for `Security` dividends.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dividendsRequest'
            examples:
              Request AAPL Dividends in 2019:
                $ref: '#/components/examples/singleSecurityDividends'
              Request Latest Dividends of AAPL and MSFT:
                $ref: '#/components/examples/latestDividendsPost'
      responses:
        '200':
          description: >-
            Array of dividend information for a given date range and list of
            securities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dividendsResponse'
              examples:
                Latest Dividends for AAPL and MSFT:
                  $ref: '#/components/examples/latestDividends'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /factset-prices/v1/splits:
    get:
      tags:
        - Splits
      summary: Gets full history of security Splits for a list of `ids`
      operationId: getSecuritySplits
      description: >-
        Gets the entire history of splits for a given list of identifiers.
        Information returned includes the split factor, a plain text comment
        regarding the type of split, and the event date.
      parameters:
        - $ref: '#/components/parameters/idsMax2000'
      responses:
        '200':
          description: Array of security splits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/splitsResponse'
              examples:
                Split History for a Single Security - MSFT:
                  $ref: '#/components/examples/singleSecuritySplits'
                Split History for a List of Securities:
                  $ref: '#/components/examples/multipleSecuritySplits'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - Splits
      summary: Requests splits for a list of `ids`
      description: >-
        Gets the entire history of splits for a given list of identifiers.
        Information returned includes the split factor, a plain text comment
        regarding the type of split, and the event date.
      operationId: getSecuritySplitsForList
      requestBody:
        required: true
        description: Request object for `Security` split factors.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/splitsRequest'
            examples:
              Single Company Daily Prices One Month:
                $ref: '#/components/examples/splitHistoryMSFTPost'
              One Year of Monthly Prices for AAPL in 2019:
                $ref: '#/components/examples/multipleSplitsHistoryPost'
      responses:
        '200':
          description: Array of Splits objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/splitsResponse'
              examples:
                Splits History for MSFT:
                  $ref: '#/components/examples/singleSecuritySplits'
                Split History for a List of Securities:
                  $ref: '#/components/examples/multipleSecuritySplits'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /factset-prices/v1/shares:
    get:
      tags:
        - Shares
      summary: Gets shares for a list of `ids` as of given date range.
      operationId: getSecurityShares
      description: >-
        Gets security shares for a list of 'ids' and given date range. Share
        values returned include security-level and company-level.
      parameters:
        - $ref: '#/components/parameters/idsMax1000'
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - $ref: '#/components/parameters/frequency'
        - $ref: '#/components/parameters/calendar'
        - $ref: '#/components/parameters/splitAdjust'
      responses:
        '200':
          description: Array of security shares
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sharesResponse'
              examples:
                One Year of Monthly Share Counts for AAPL:
                  $ref: '#/components/examples/singleSecurityShares'
                Multiple Security Share Counts as of 2019 Year End - FB, AAPL, NFLX, GOOGL:
                  $ref: '#/components/examples/multipleSecuritiesShares'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - Shares
      summary: Requests shares for a list of `ids` as of given date range.
      description: >-
        Gets security shares for a list of 'ids' and given date range. Share
        values returned include security-level and company-level.
      operationId: getSecuritySharesForList
      requestBody:
        required: true
        description: Request object for `Security` shares.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sharesRequest'
            examples:
              Request One Year of Monthly Share Counts for AAPL:
                $ref: '#/components/examples/singleSecuritySharesPost'
              Request Multiple Security Share Counts as of 2019 Year End - FB, AAPL, NFLX, GOOGL:
                $ref: '#/components/examples/multipleSecuritiesSharesPost'
      responses:
        '200':
          description: Array of Shares objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sharesResponse'
              examples:
                One Year of Monthly Share Counts for AAPL:
                  $ref: '#/components/examples/singleSecurityShares'
                Multiple Security Share Counts as of 2019 Year End - FB, AAPL, NFLX, GOOGL:
                  $ref: '#/components/examples/multipleSecuritiesShares'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /factset-prices/v1/market-value:
    get:
      tags:
        - Market Value
      summary: >-
        Gets the security level and company level market values for a list of
        `ids` as of given date range and frequency.
      operationId: getMarketValue
      description: >
        Gets market capitalization of list of ids for the company level,
        security level, calendar, frequency, and currency for a specified date
        range.
      parameters:
        - $ref: '#/components/parameters/idsMax2000'
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - $ref: '#/components/parameters/frequency'
        - $ref: '#/components/parameters/calendar'
        - $ref: '#/components/parameters/currency'
      responses:
        '200':
          description: Array of company market capitalization values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/marketValueResponse'
              examples:
                Market Value of GOOGL as of July 07 2020:
                  $ref: '#/components/examples/singleMarketValue'
                Market Value for AAPL and TSLA as of March 29th 2019:
                  $ref: '#/components/examples/multipleMarketValues'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - Market Value
      summary: Requests the market value for a list of `ids` as of given date range.
      description: Requests the market value for a list of `ids` as of given date range.
      operationId: getMarketValueForList
      requestBody:
        required: true
        description: Request object for `Security` market values.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/marketValueRequest'
            examples:
              Single Company Market Value:
                $ref: '#/components/examples/singleMarketValuePost'
              Multiple Company Market Values:
                $ref: '#/components/examples/multipleMarketValuePost'
      responses:
        '200':
          description: Array of company market capitalization values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/marketValueResponse'
              examples:
                Market Value of GOOGL as of July 07 2020:
                  $ref: '#/components/examples/singleMarketValue'
                Market Value for AAPL and TSLA as of March 29th 2019:
                  $ref: '#/components/examples/multipleMarketValues'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /factset-prices/v1/high-low:
    get:
      tags:
        - High Low
      summary: >-
        Gets the price high and price low of securities for a list of `ids` as
        of given date, period and frequency.
      operationId: getHighLow
      description: >
        For given security(s), gets the high and low prices with the respective
        dates on which they occurred. This service gives options for fetching
        the price as of the close or intraday.
      parameters:
        - $ref: '#/components/parameters/idsMax2000'
        - $ref: '#/components/parameters/date'
        - $ref: '#/components/parameters/period'
        - $ref: '#/components/parameters/priceType'
        - $ref: '#/components/parameters/calendar'
        - $ref: '#/components/parameters/currency'
        - $ref: '#/components/parameters/adjust'
      responses:
        '200':
          description: Array of price high and price low values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/highLowResponse'
              examples:
                52 week Price High and Price Low of GOOGL-US as of July 07 2020:
                  $ref: '#/components/examples/singleHighLow'
                52 week Price High and Price Low for AAPL-US and TSLA-US as of March 07 2020:
                  $ref: '#/components/examples/multipleHighLow'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - High Low
      summary: >-
        Requests the price high and price low of securities for a list of `ids`
        as of given date, period and frequency.
      description: >
        For given security(s), gets the high and low prices with the respective
        dates on which they occurred. This service gives options for fetching
        the price as of the close or intraday.
      operationId: getHighLowForList
      requestBody:
        required: true
        description: Request object for high low prices.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/highLowRequest'
            examples:
              Single Company Market Value:
                $ref: '#/components/examples/singleHighLowPost'
              Multiple Company Market Values:
                $ref: '#/components/examples/multipleHighLowPost'
      responses:
        '200':
          description: Array of company price high and price low values.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/highLowResponse'
              examples:
                52 week Price High and Price Low of GOOGL-US as of July 07 2020:
                  $ref: '#/components/examples/singleHighLow'
                52 week Price High and Price Low of AAPL-US and TSLA-US as of March 07 2020:
                  $ref: '#/components/examples/multipleHighLow'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /factset-prices/v1/database-rollover:
    get:
      summary: Gets the latest relative rollover date for the database.
      description: >
        Gets zero relative date and last update time for FactSet databases. The
        dates represent the date that the rollover event happened; the date and
        time is in **eastern time zone**.  <p>Depending on the ids requested and
        their respective regions, a requested startDate or endDate used in the
        various Prices API may reflect different previous close dates. This
        relative "zero" date, meaning - as of yesterday's close - will vary
        across global regions. This API is designed to help production systems
        account for regional rollover dates to know when to trigger their
        processes for different regions to reflect the latest close. The
        response gives context for AMERICAS, ASIA PACIFIC, and EUROPE. </p>
      tags:
        - Database Rollover
      operationId: getDatabaseRollover
      responses:
        '200':
          description: Database rollover data items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rolloverResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Gets the latest relative rollover date for the database.
      description: >
        Gets zero relative date and last update time for FactSet databases. The
        dates represent the date that the rollover event happened; the date and
        time is in **eastern time zone**.  <p>Depending on the ids requested and
        their respective regions, a requested startDate or endDate used in the
        various Prices API may reflect different previous close dates. This
        relative "zero" date, meaning - as of yesterday's close - will vary
        across global regions. This API is designed to help production systems
        account for regional rollover dates to know when to trigger their
        processes for different regions to reflect the latest close. The
        response gives context for AMERICAS, ASIA PACIFIC, and EUROPE. </p>
      tags:
        - Database Rollover
      operationId: getDatabaseRolloverForList
      responses:
        '200':
          description: Database rollover data items.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rolloverResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '415':
          $ref: '#/components/responses/415'
        '500':
          $ref: '#/components/responses/500'
  /batch/v1/status:
    get:
      tags:
        - Batch Processing
      summary: Returns the status for a Batch Request
      description: >-
        Return the status for the underlying batch request that is specified by
        the id.
      operationId: getBatchStatus
      parameters:
        - $ref: '#/components/parameters/batchId'
      responses:
        '201':
          description: Batch Request has been completed and the response has been created.
          headers:
            Location:
              description: Path to Batch Request result.
              schema:
                type: string
              example: batch/v1/result?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Status Done:
                  $ref: '#/components/examples/BatchStatusDoneResponse'
        '202':
          description: Batch Request has not finished and the result has NOT been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Status Queued:
                  $ref: '#/components/examples/BatchStatusQueuedResponse'
                Batch Status Executing:
                  $ref: '#/components/examples/BatchStatusExecutingResponse'
                Batch Status Failed:
                  $ref: '#/components/examples/BatchStatusFailedResponse'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
    post:
      tags:
        - Batch Processing
      summary: Returns the status for a Batch Request
      description: >-
        Return the status for the underlying batch request that is specified by
        the id. 
      operationId: getBatchStatusWithPost
      requestBody:
        description: Batch Status Request Post Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchStatusRequest'
            examples:
              Batch Status Request:
                $ref: '#/components/examples/BatchStatusRequest'
        required: true
      responses:
        '201':
          description: Batch Request has been completed and the response has been created.
          headers:
            Location:
              description: Path to Batch Request result.
              schema:
                type: string
              example: batch/v1/result?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Status Done:
                  $ref: '#/components/examples/BatchStatusDoneResponse'
        '202':
          description: Batch Request has not finished and the result has NOT been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Status Queued:
                  $ref: '#/components/examples/BatchStatusQueuedResponse'
                Batch Status Executing:
                  $ref: '#/components/examples/BatchStatusExecutingResponse'
                Batch Status Failed:
                  $ref: '#/components/examples/BatchStatusFailedResponse'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
  /batch/v1/result:
    get:
      tags:
        - Batch Processing
      summary: Returns the response for a Batch Request
      description: >-
        Returns the response data for the underlying batch request that is
        specified by the id.
      operationId: getBatchData
      parameters:
        - $ref: '#/components/parameters/batchId'
      responses:
        '200':
          description: >-
            Request Response Object when batch request has completed and
            response is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDataResponse'
              examples:
                Price of AAPL as of March 29 2019:
                  $ref: '#/components/examples/singleSecurityPrices'
                Prices for AAPL and TSLA as of March 29th 2019:
                  $ref: '#/components/examples/twoSecuritiesPrices'
                One Month of Daily Prices for AAPL in March 2019:
                  $ref: '#/components/examples/oneMonthSecurityPrices'
        '202':
          description: Batch Request has not finished and the result has NOT been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Request Queued:
                  $ref: '#/components/examples/BatchStatusQueuedResponse'
                Batch Request Executing:
                  $ref: '#/components/examples/BatchStatusExecutingResponse'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
    post:
      tags:
        - Batch Processing
      summary: Returns the response for a Batch Request
      description: >-
        Return the response data for the underlying batch request that is
        specified by the id. 
      operationId: getBatchDataWithPost
      requestBody:
        description: Batch Data Request Post Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDataRequest'
            examples:
              Batch Data Request:
                $ref: '#/components/examples/BatchDataRequest'
        required: true
      responses:
        '200':
          description: >-
            Request Response Object when batch request has completed and
            response is created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDataResponse'
              examples:
                Price of AAPL as of March 29 2019:
                  $ref: '#/components/examples/singleSecurityPrices'
                Prices for AAPL and TSLA as of March 29th 2019:
                  $ref: '#/components/examples/twoSecuritiesPrices'
                One Month of Daily Prices for AAPL in March 2019:
                  $ref: '#/components/examples/oneMonthSecurityPrices'
        '202':
          description: Batch Request has not finished and the result has NOT been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Request Queued:
                  $ref: '#/components/examples/BatchStatusQueuedResponse'
                Batch Request Executing:
                  $ref: '#/components/examples/BatchStatusExecutingResponse'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
th 2019:
                  $ref: '#/components/examples/twoSecuritiesPrices'
                One Month of Daily Prices for AAPL in March 2019:
                  $ref: '#/components/examples/oneMonthSecurityPrices'
        '202':
          description: Batch Request has not finished and the result has NOT been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Request Queued:
                  $ref: '#/components/examples/BatchStatusQueuedResponse'
                Batch Request Executing:
                  $ref: '#/components/examples/BatchStatusExecutingResponse'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
    post:
      tags:
        - Batch Processing
      summary: Returns the response for a Batch Request
      description: >-
        Return the response data for the underlying batch request that is
        specified by the id. 
      operationId: getBatchDataWithPost
      requestBody:
        description: Batch Data Request Post Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDataRequest'
            examples:
              Batch Data Request:
                $ref: '#/components/examples/BatchDataRequest'
        required: true
      responses:
        '200':
          description: >-
            Request Response Object when batch request has completed and
            response is created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDataResponse'
              examples:
                Price of AAPL as of March 29 2019:
                  $ref: '#/components/examples/singleSecurityPrices'
                Prices for AAPL and TSLA as of March 29th 2019:
                  $ref: '#/components/examples/twoSecuritiesPrices'
                One Month of Daily Prices for AAPL in March 2019:
                  $ref: '#/components/examples/oneMonthSecurityPrices'
        '202':
          description: Batch Request has not finished and the result has NOT been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Request Queued:
                  $ref: '#/components/examples/BatchStatusQueuedResponse'
                Batch Request Executing:
                  $ref: '#/components/examples/BatchStatusExecutingResponse'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
:
              schema:
                $ref: '#/components/schemas/BatchDataResponse'
              examples:
                Price of AAPL as of March 29 2019:
                  $ref: '#/components/examples/singleSecurityPrices'
                Prices for AAPL and TSLA as of March 29th 2019:
                  $ref: '#/components/examples/twoSecuritiesPrices'
                One Month of Daily Prices for AAPL in March 2019:
                  $ref: '#/components/examples/oneMonthSecurityPrices'
        '202':
          description: Batch Request has not finished and the result has NOT been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Request Queued:
                  $ref: '#/components/examples/BatchStatusQueuedResponse'
                Batch Request Executing:
                  $ref: '#/components/examples/BatchStatusExecutingResponse'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
    post:
      tags:
        - Batch Processing
      summary: Returns the response for a Batch Request
      description: >-
        Return the response data for the underlying batch request that is
        specified by the id. 
      operationId: getBatchDataWithPost
      requestBody:
        description: Batch Data Request Post Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDataRequest'
            examples:
              Batch Data Request:
                $ref: '#/components/examples/BatchDataRequest'
        required: true
      responses:
        '200':
          description: >-
            Request Response Object when batch request has completed and
            response is created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDataResponse'
              examples:
                Price of AAPL as of March 29 2019:
                  $ref: '#/components/examples/singleSecurityPrices'
                Prices for AAPL and TSLA as of March 29th 2019:
                  $ref: '#/components/examples/twoSecuritiesPrices'
                One Month of Daily Prices for AAPL in March 2019:
                  $ref: '#/components/examples/oneMonthSecurityPrices'
        '202':
          description: Batch Request has not finished and the result has NOT been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Request Queued:
                  $ref: '#/components/examples/BatchStatusQueuedResponse'
                Batch Request Executing:
                  $ref: '#/components/examples/BatchStatusExecutingResponse'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
    Batch Request Executing:
                  $ref: '#/components/examples/BatchStatusExecutingResponse'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
    post:
      tags:
        - Batch Processing
      summary: Returns the response for a Batch Request
      description: >-
        Return the response data for the underlying batch request that is
        specified by the id. 
      operationId: getBatchDataWithPost
      requestBody:
        description: Batch Data Request Post Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDataRequest'
            examples:
              Batch Data Request:
                $ref: '#/components/examples/BatchDataRequest'
        required: true
      responses:
        '200':
          description: >-
            Request Response Object when batch request has completed and
            response is created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDataResponse'
              examples:
                Price of AAPL as of March 29 2019:
                  $ref: '#/components/examples/singleSecurityPrices'
                Prices for AAPL and TSLA as of March 29th 2019:
                  $ref: '#/components/examples/twoSecuritiesPrices'
                One Month of Daily Prices for AAPL in March 2019:
                  $ref: '#/components/examples/oneMonthSecurityPrices'
        '202':
          description: Batch Request has not finished and the result has NOT been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Request Queued:
                  $ref: '#/components/examples/BatchStatusQueuedResponse'
                Batch Request Executing:
                  $ref: '#/components/examples/BatchStatusExecutingResponse'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
        One Month of Daily Prices for AAPL in March 2019:
                  $ref: '#/components/examples/oneMonthSecurityPrices'
        '202':
          description: Batch Request has not finished and the result has NOT been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Request Queued:
                  $ref: '#/components/examples/BatchStatusQueuedResponse'
                Batch Request Executing:
                  $ref: '#/components/examples/BatchStatusExecutingResponse'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
    post:
      tags:
        - Batch Processing
      summary: Returns the response for a Batch Request
      description: >-
        Return the response data for the underlying batch request that is
        specified by the id. 
      operationId: getBatchDataWithPost
      requestBody:
        description: Batch Data Request Post Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDataRequest'
            examples:
              Batch Data Request:
                $ref: '#/components/examples/BatchDataRequest'
        required: true
      responses:
        '200':
          description: >-
            Request Response Object when batch request has completed and
            response is created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchDataResponse'
              examples:
                Price of AAPL as of March 29 2019:
                  $ref: '#/components/examples/singleSecurityPrices'
                Prices for AAPL and TSLA as of March 29th 2019:
                  $ref: '#/components/examples/twoSecuritiesPrices'
                One Month of Daily Prices for AAPL in March 2019:
                  $ref: '#/components/examples/oneMonthSecurityPrices'
        '202':
          description: Batch Request has not finished and the result has NOT been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                Batch Request Queued:
                  $ref: '#/components/examples/BatchStatusQueuedResponse'
                Batch Request Executing:
                  $ref: '#/components/examples/BatchStatusExecutingResponse'
        '404':
          $ref: '#/components/responses/404'
      deprecated: false
