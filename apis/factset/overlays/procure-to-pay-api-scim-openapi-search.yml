openapi: 3.0.0
info:
  title: FactSet SCIM API
paths:
  /ServiceProviderConfig:
    get:
      tags:
        - Server configuration
      summary: Get server configuration.
  /Schemas:
    get:
      tags:
        - Schemas
      summary: Get a list of schemas.
  /Schemas/{id}:
    get:
      tags:
        - Schemas
      summary: Get a schema.
  /Users:
    get:
      tags:
        - Users
      summary: Get a list of users.
    post:
      tags:
        - Users
      summary: Create a user.
  /Users/{id}:
    get:
      tags:
        - Users
      summary: Get a user.
    put:
      tags:
        - Users
      summary: Replace a user.
    patch:
      tags:
        - Users
      summary: Patch a user (add, replace, or remove attributes of a user.)
    delete:
      tags:
        - Users
      summary: Delete a user
  /Groups:
    get:
      tags:
        - Groups
      summary: Get a list of groups.
  /Group/{id}:
    get:
      tags:
        - Groups
      summary: Get a group.
    put:
      tags:
        - Groups
      summary: Replace a group.
    patch:
      tags:
        - Groups
      summary: Patch a group (add, replace, or remove attributes of a group.)
  /Locations:
    get:
      tags:
        - Locations
      summary: Get a list of locations.
  /Locations/{id}:
    get:
      tags:
        - Locations
      summary: Get a location.
    put:
      tags:
        - Locations
      summary: Replace a location.
    patch:
      tags:
        - Locations
      summary: Patch a location (add, replace, or remove attributes of a location.)
  /Products:
    get:
      tags:
        - Products
      summary: Get a list of products.
  /Products/{id}:
    get:
      tags:
        - Products
      summary: Get a product.
  /FileManagerAudit:
    get:
      tags:
        - FileManagerAudit
      summary: Get File Manager audit data.
      security:
        - basicAuth: []
      responses:
        '200':
          $ref: '#/components/responses/fileManagerAuditSuccess'
        '500':
          $ref: '#/components/responses/internalServerError'
mponents/responses/groupNotFoundError'
        '500':
          $ref: '#/components/responses/internalServerError'
    put:
      tags:
        - Groups
      summary: Replace a group.
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/resourceId'
      requestBody:
        $ref: '#/components/requestBodies/groupResource'
      responses:
        '200':
          $ref: '#/components/responses/groupSuccess'
        '400':
          $ref: '#/components/responses/invalidResourceProvidedError'
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbiddenError'
        '404':
          $ref: '#/components/responses/groupNotFoundError'
        '500':
          $ref: '#/components/responses/internalServerError'
    patch:
      tags:
        - Groups
      summary: Patch a group (add, replace, or remove attributes of a group.)
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/resourceId'
      requestBody:
        $ref: '#/components/requestBodies/patchGroupResource'
      responses:
        '200':
          $ref: '#/components/responses/groupSuccess'
        '400':
          $ref: '#/components/responses/invalidPatchRequestError'
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbiddenError'
        '500':
          $ref: '#/components/responses/internalServerError'
  /Locations:
    get:
      tags:
        - Locations
      summary: Get a list of locations.
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/startIndex'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/attributes'
        - $ref: '#/components/parameters/excludedAttributes'
      responses:
        '200':
          $ref: '#/components/responses/locationsSuccess'
        '400':
          $ref: '#/components/responses/invalidFilterError'
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbiddenError'
        '500':
          $ref: '#/components/responses/internalServerError'
  /Locations/{id}:
    get:
      tags:
        - Locations
      summary: Get a location.
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/resourceId'
      responses:
        '200':
          $ref: '#/components/responses/locationSuccess'
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbiddenError'
        '404':
          $ref: '#/components/responses/locationNotFoundError'
        '500':
          $ref: '#/components/responses/internalServerError'
    put:
      tags:
        - Locations
      summary: Replace a location.
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/resourceId'
      requestBody:
        $ref: '#/components/requestBodies/locationResource'
      responses:
        '200':
          $ref: '#/components/responses/locationSuccess'
        '400':
          $ref: '#/components/responses/invalidResourceProvidedError'
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbiddenError'
        '404':
          $ref: '#/components/responses/locationNotFoundError'
        '500':
          $ref: '#/components/responses/internalServerError'
    patch:
      tags:
        - Locations
      summary: Patch a location (add, replace, or remove attributes of a location.)
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/resourceId'
      requestBody:
        $ref: '#/components/requestBodies/patchLocationResource'
      responses:
        '200':
          $ref: '#/components/responses/locationSuccess'
        '400':
          $ref: '#/components/responses/invalidPatchRequestError'
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbiddenError'
        '500':
          $ref: '#/components/responses/internalServerError'
  /Products:
    get:
      tags:
        - Products
      summary: Get a list of products.
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/startIndex'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/attributes'
        - $ref: '#/components/parameters/excludedAttributes'
      responses:
        '200':
          $ref: '#/components/responses/productsSuccess'
        '400':
          $ref: '#/components/responses/invalidFilterError'
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbiddenError'
        '500':
          $ref: '#/components/responses/internalServerError'
  /Products/{id}:
    get:
      tags:
        - Products
      summary: Get a product.
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/resourceId'
      responses:
        '200':
          $ref: '#/components/responses/productSuccess'
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbiddenError'
        '404':
          $ref: '#/components/responses/productNotFoundError'
        '500':
          $ref: '#/components/responses/internalServerError'
  /FileManagerAudit:
    get:
      tags:
        - FileManagerAudit
      summary: Get File Manager audit data.
      security:
        - basicAuth: []
      responses:
        '200':
          $ref: '#/components/responses/fileManagerAuditSuccess'
        '500':
          $ref: '#/components/responses/internalServerError'
rameters/attributes'
        - $ref: '#/components/parameters/excludedAttributes'
      responses:
        '200':
          $ref: '#/components/responses/locationsSuccess'
        '400':
          $ref: '#/components/responses/invalidFilterError'
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbiddenError'
        '500':
          $ref: '#/components/responses/internalServerError'
  /Locations/{id}:
    get:
      tags:
        - Locations
      summary: Get a location.
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/resourceId'
      responses:
        '200':
          $ref: '#/components/responses/locationSuccess'
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbiddenError'
        '404':
          $ref: '#/components/responses/locationNotFoundError'
        '500':
          $ref: '#/components/responses/internalServerError'
    put:
      tags:
        - Locations
      summary: Replace a location.
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/resourceId'
      requestBody:
        $ref: '#/components/requestBodies/locationResource'
      responses:
        '200':
          $ref: '#/components/responses/locationSuccess'
        '400':
          $ref: '#/components/responses/invalidResourceProvidedError'
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbiddenError'
        '404':
          $ref: '#/components/responses/locationNotFoundError'
        '500':
          $ref: '#/components/responses/internalServerError'
    patch:
      tags:
        - Locations
      summary: Patch a location (add, replace, or remove attributes of a location.)
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/resourceId'
      requestBody:
        $ref: '#/components/requestBodies/patchLocationResource'
      responses:
        '200':
          $ref: '#/components/responses/locationSuccess'
        '400':
          $ref: '#/components/responses/invalidPatchRequestError'
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbiddenError'
        '500':
          $ref: '#/components/responses/internalServerError'
  /Products:
    get:
      tags:
        - Products
      summary: Get a list of products.
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/startIndex'
        - $ref: '#/components/parameters/count'
        - $ref: '#/components/parameters/attributes'
        - $ref: '#/components/parameters/excludedAttributes'
      responses:
        '200':
          $ref: '#/components/responses/productsSuccess'
        '400':
          $ref: '#/components/responses/invalidFilterError'
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbiddenError'
        '500':
          $ref: '#/components/responses/internalServerError'
  /Products/{id}:
    get:
      tags:
        - Products
      summary: Get a product.
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/resourceId'
      responses:
        '200':
          $ref: '#/components/responses/productSuccess'
        '401':
          $ref: '#/components/responses/unauthorizedError'
        '403':
          $ref: '#/components/responses/forbiddenError'
        '404':
          $ref: '#/components/responses/productNotFoundError'
        '500':
          $ref: '#/components/responses/internalServerError'
  /FileManagerAudit:
    get:
      tags:
        - FileManagerAudit
      summary: Get File Manager audit data.
      security:
        - basicAuth: []
      responses:
        '200':
          $ref: '#/components/responses/fileManagerAuditSuccess'
        '500':
          $ref: '#/components/responses/internalServerError'
4':
          $ref: '#/components/responses/productNotFoundError'
        '500':
          $ref: '#/components/responses/internalServerError'
  /FileManagerAudit:
    get:
      tags:
        - FileManagerAudit
      summary: Get File Manager audit data.
      security:
        - basicAuth: []
      responses:
        '200':
          $ref: '#/components/responses/fileManagerAuditSuccess'
        '500':
          $ref: '#/components/responses/internalServerError'
