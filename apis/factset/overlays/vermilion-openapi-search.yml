openapi: 3.0.0
info:
  title: VRS API documentation
  license:
    name: Apache License, Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
externalDocs:
  description: API Documentation
  url: https://developer.factset.com/api-catalog/vermilion-api
tags:
  - name: Datasource
  - name: Entity
  - name: Report
  - name: Report instance
  - name: SCIM
paths:
  /v1/{tenant}/data-sources:
    get:
      tags:
        - Datasource
      summary: Lists all datasources
      description: List all datasources the user has permission to see
  /v1/{tenant}/data-sources/{dataSourceCode}:
    get:
      tags:
        - Datasource
      summary: Gets a datasource
      description: Gets a datasource based on the code passed
  /v1/{tenant}/data-sources/{dataSourceCode}/data:
    get:
      tags:
        - Datasource
      summary: Gets the data for the datasource
      description: >-
        Gets the data for the datasource. There are optional query parameters to
        filter the data
  /v1/{tenant}/entities/{entityCode}/values:
    get:
      tags:
        - Entity
      summary: Gets the entity values
      description: Gets the entity values for the specified entity
  /v1/{tenant}/reports:
    get:
      tags:
        - Report
      summary: Gets all report definitions
      description: Gets all report definitions the user has permissions for
  /v1/{tenant}/reports/{reportDefinitionCode}:
    get:
      tags:
        - Report
      summary: Gets a report definition
      description: Gets a report defintion based on the code specified
  /v1/report-instances/generate:
    post:
      tags:
        - Report instance
      summary: Generates a report
      description: >-
        Generates a report using the specified ID and the JSON in the request
        body
  /v1/{tenant}/report-instances/{reportInstanceId}:
    delete:
      tags:
        - Report instance
      summary: Cancels a report generation
      description: >-
        Sends a request to cancel a report generation based on the report
        instance id passed
    get:
      tags:
        - Report instance
      summary: Gets a report instance based on the ID
      description: Gets a report instance object based on the ID passed
  /v1/{tenant}/report-instances:
    get:
      tags:
        - Report instance
      summary: Gets a list of report instances
      description: >-
        Gets a list of report instances. This can be filtered down further by
        including query parameters in the URL. For example, a report definition
        id can be added so the only report instances returned are the ones with
        a matching id
  /v1/{tenant}/report-instances/{reportInstanceId}/results/{reportFileName}:
    get:
      tags:
        - Report instance
      summary: Gets the generated file
      description: >-
        Get the generated file for a report instance. Users can fetch the
        generated report once the genration is finished. The report instance id
        and the report file name are passed in as path paramters
  /v1/{tenant}/report-instances/{reportInstanceId}/logs:
    get:
      tags:
        - Report instance
      summary: Gets a list of logs for the report instance generation
      description: >-
        Gets a list of logs for the generated report instance. Allows the user
        to sort on log message, type and date. Also allows for retrieving of
        just the errors & warnings'
  /scim/v2/Users:
    get:
      tags:
        - SCIM
      summary: Retrieves a list of VRS users
      description: Retrieves a list of VRS users
    post:
      tags:
        - SCIM
      summary: Creates a user
      description: Creates a VRS user
  /scim/v2/Users/{userId}:
    get:
      tags:
        - SCIM
      summary: Retrieves a VRS User
      description: Retrieves a VRS user based on their ID
    delete:
      tags:
        - SCIM
      summary: Deletes a VRS user
      description: Deletes a VRS user (this marks them as 'Deleted' in the database)
    patch:
      tags:
        - SCIM
      summary: Add or remove VRS user attributes
      description: Adds or removes VRS user attributes based on the JSON properties
    put:
      tags:
        - SCIM
      summary: Updates a VRS user
      description: Updates (replaces) a VRS user with the properties in the JSON
  /scim/v2/Groups:
    get:
      operationId: getAllRoles
      tags:
        - SCIM
      summary: Retrieves a list of VRS role
      description: Retrieves a VRS roles
      parameters:
        - in: query
          name: count
          description: Non-negative maximum number of entries to return
          schema:
            type: integer
          examples:
            count:
              value: 25
              description: Non-negative maximum number of entries to return
        - in: query
          name: startIndex
          description: The 1-based index of the first query result
          schema:
            type: integer
          examples:
            startIndex:
              value: 1
              description: The 1-based index of the first query result
      responses:
        '200':
          description: Successful operation
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroupListResponse'
        '403':
          description: Forbidden, user does not have permission to view roles
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to view roles
                status: '403'
    post:
      operationId: createRole
      tags:
        - SCIM
      summary: Creates a role
      description: Creates a VRS role
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimGroup'
      responses:
        '201':
          description: Created
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          headers:
            Location:
              schema:
                type: string
              description: >-
                A callback URL to the newly create role, for example
                https://example.com/VRSAPI/scim/v2/Groups/1
        '403':
          description: Forbidden, user does not have permission to create roles
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to create groups
                status: '403'
        '409':
          description: Group already exists
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Group already exists
                status: '409'
  /scim/v2/Groups/{groupId}:
    get:
      operationId: getRoleById
      tags:
        - SCIM
      summary: Retrieves a VRS role
      description: Retrieves a VRS role based on the ID
      parameters:
        - in: path
          name: groupId
          description: The ID of the role
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          headers:
            Location:
              schema:
                type: string
              description: >-
                A callback URL to the newly create role, for example
                https://example.com/VRSAPI/scim/v2/Groups/1
        '403':
          description: Forbidden, user does not have permission to view roles
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to view roles
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
    delete:
      operationId: deleteRoleById
      tags:
        - SCIM
      summary: Deletes a VRS role
      description: Deletes a VRS role
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden, user does not have permission to delete roles
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to delete roles
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
    patch:
      operationId: patchRoleById
      tags:
        - SCIM
      summary: Add or remove a user to/from a group
      description: Adds or removes a VRS user to/from a VRS role
      parameters:
        - in: path
          name: groupId
          description: The ID of the role
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimRolePatchRequestBody'
            example:
              schemas:
                - urn:ietf:params:scim:api:messages:2.0:PatchOp
              Operations:
                - op: add
                  path: members
                  value:
                    display: Test user
                    $ref: VRSAPI/scim/v2/Users/1
                    value: '1'
      responses:
        '200':
          description: Successfully added user to group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
    put:
      operationId: updateRoleById
      tags:
        - SCIM
      summary: Updates a VRS Group
      description: Updates (replaces) a VRS Group with the properties in the JSON
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimGroup'
      responses:
        '200':
          description: Successfully updated group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          headers:
            Location:
              schema:
                type: string
              description: >-
                A callback URL to the updated group, for example
                https://example.com/VRSAPI/scim/v2/Groups/1
        '403':
          description: Forbidden, user does not have permission to update groups
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to update groups
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
n: Group already exists
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Group already exists
                status: '409'
  /scim/v2/Groups/{groupId}:
    get:
      operationId: getRoleById
      tags:
        - SCIM
      summary: Retrieves a VRS role
      description: Retrieves a VRS role based on the ID
      parameters:
        - in: path
          name: groupId
          description: The ID of the role
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          headers:
            Location:
              schema:
                type: string
              description: >-
                A callback URL to the newly create role, for example
                https://example.com/VRSAPI/scim/v2/Groups/1
        '403':
          description: Forbidden, user does not have permission to view roles
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to view roles
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
    delete:
      operationId: deleteRoleById
      tags:
        - SCIM
      summary: Deletes a VRS role
      description: Deletes a VRS role
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden, user does not have permission to delete roles
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to delete roles
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
    patch:
      operationId: patchRoleById
      tags:
        - SCIM
      summary: Add or remove a user to/from a group
      description: Adds or removes a VRS user to/from a VRS role
      parameters:
        - in: path
          name: groupId
          description: The ID of the role
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimRolePatchRequestBody'
            example:
              schemas:
                - urn:ietf:params:scim:api:messages:2.0:PatchOp
              Operations:
                - op: add
                  path: members
                  value:
                    display: Test user
                    $ref: VRSAPI/scim/v2/Users/1
                    value: '1'
      responses:
        '200':
          description: Successfully added user to group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
    put:
      operationId: updateRoleById
      tags:
        - SCIM
      summary: Updates a VRS Group
      description: Updates (replaces) a VRS Group with the properties in the JSON
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimGroup'
      responses:
        '200':
          description: Successfully updated group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          headers:
            Location:
              schema:
                type: string
              description: >-
                A callback URL to the updated group, for example
                https://example.com/VRSAPI/scim/v2/Groups/1
        '403':
          description: Forbidden, user does not have permission to update groups
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to update groups
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
               detail: User does not have permission to delete roles
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
    patch:
      operationId: patchRoleById
      tags:
        - SCIM
      summary: Add or remove a user to/from a group
      description: Adds or removes a VRS user to/from a VRS role
      parameters:
        - in: path
          name: groupId
          description: The ID of the role
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimRolePatchRequestBody'
            example:
              schemas:
                - urn:ietf:params:scim:api:messages:2.0:PatchOp
              Operations:
                - op: add
                  path: members
                  value:
                    display: Test user
                    $ref: VRSAPI/scim/v2/Users/1
                    value: '1'
      responses:
        '200':
          description: Successfully added user to group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
    put:
      operationId: updateRoleById
      tags:
        - SCIM
      summary: Updates a VRS Group
      description: Updates (replaces) a VRS Group with the properties in the JSON
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimGroup'
      responses:
        '200':
          description: Successfully updated group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          headers:
            Location:
              schema:
                type: string
              description: >-
                A callback URL to the updated group, for example
                https://example.com/VRSAPI/scim/v2/Groups/1
        '403':
          description: Forbidden, user does not have permission to update groups
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to update groups
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
ete:
      operationId: deleteRoleById
      tags:
        - SCIM
      summary: Deletes a VRS role
      description: Deletes a VRS role
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden, user does not have permission to delete roles
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to delete roles
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
    patch:
      operationId: patchRoleById
      tags:
        - SCIM
      summary: Add or remove a user to/from a group
      description: Adds or removes a VRS user to/from a VRS role
      parameters:
        - in: path
          name: groupId
          description: The ID of the role
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimRolePatchRequestBody'
            example:
              schemas:
                - urn:ietf:params:scim:api:messages:2.0:PatchOp
              Operations:
                - op: add
                  path: members
                  value:
                    display: Test user
                    $ref: VRSAPI/scim/v2/Users/1
                    value: '1'
      responses:
        '200':
          description: Successfully added user to group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
    put:
      operationId: updateRoleById
      tags:
        - SCIM
      summary: Updates a VRS Group
      description: Updates (replaces) a VRS Group with the properties in the JSON
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimGroup'
      responses:
        '200':
          description: Successfully updated group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          headers:
            Location:
              schema:
                type: string
              description: >-
                A callback URL to the updated group, for example
                https://example.com/VRSAPI/scim/v2/Groups/1
        '403':
          description: Forbidden, user does not have permission to update groups
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to update groups
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
        description: The ID of the role
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimRolePatchRequestBody'
            example:
              schemas:
                - urn:ietf:params:scim:api:messages:2.0:PatchOp
              Operations:
                - op: add
                  path: members
                  value:
                    display: Test user
                    $ref: VRSAPI/scim/v2/Users/1
                    value: '1'
      responses:
        '200':
          description: Successfully added user to group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
    put:
      operationId: updateRoleById
      tags:
        - SCIM
      summary: Updates a VRS Group
      description: Updates (replaces) a VRS Group with the properties in the JSON
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimGroup'
      responses:
        '200':
          description: Successfully updated group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          headers:
            Location:
              schema:
                type: string
              description: >-
                A callback URL to the updated group, for example
                https://example.com/VRSAPI/scim/v2/Groups/1
        '403':
          description: Forbidden, user does not have permission to update groups
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to update groups
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
m/VRSAPI/scim/v2/Groups/1
        '403':
          description: Forbidden, user does not have permission to view roles
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to view roles
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
    delete:
      operationId: deleteRoleById
      tags:
        - SCIM
      summary: Deletes a VRS role
      description: Deletes a VRS role
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden, user does not have permission to delete roles
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to delete roles
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
    patch:
      operationId: patchRoleById
      tags:
        - SCIM
      summary: Add or remove a user to/from a group
      description: Adds or removes a VRS user to/from a VRS role
      parameters:
        - in: path
          name: groupId
          description: The ID of the role
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimRolePatchRequestBody'
            example:
              schemas:
                - urn:ietf:params:scim:api:messages:2.0:PatchOp
              Operations:
                - op: add
                  path: members
                  value:
                    display: Test user
                    $ref: VRSAPI/scim/v2/Users/1
                    value: '1'
      responses:
        '200':
          description: Successfully added user to group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
    put:
      operationId: updateRoleById
      tags:
        - SCIM
      summary: Updates a VRS Group
      description: Updates (replaces) a VRS Group with the properties in the JSON
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimGroup'
      responses:
        '200':
          description: Successfully updated group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          headers:
            Location:
              schema:
                type: string
              description: >-
                A callback URL to the updated group, for example
                https://example.com/VRSAPI/scim/v2/Groups/1
        '403':
          description: Forbidden, user does not have permission to update groups
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to update groups
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
y exists
                status: '409'
  /scim/v2/Groups/{groupId}:
    get:
      operationId: getRoleById
      tags:
        - SCIM
      summary: Retrieves a VRS role
      description: Retrieves a VRS role based on the ID
      parameters:
        - in: path
          name: groupId
          description: The ID of the role
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          headers:
            Location:
              schema:
                type: string
              description: >-
                A callback URL to the newly create role, for example
                https://example.com/VRSAPI/scim/v2/Groups/1
        '403':
          description: Forbidden, user does not have permission to view roles
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to view roles
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
    delete:
      operationId: deleteRoleById
      tags:
        - SCIM
      summary: Deletes a VRS role
      description: Deletes a VRS role
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden, user does not have permission to delete roles
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to delete roles
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
    patch:
      operationId: patchRoleById
      tags:
        - SCIM
      summary: Add or remove a user to/from a group
      description: Adds or removes a VRS user to/from a VRS role
      parameters:
        - in: path
          name: groupId
          description: The ID of the role
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimRolePatchRequestBody'
            example:
              schemas:
                - urn:ietf:params:scim:api:messages:2.0:PatchOp
              Operations:
                - op: add
                  path: members
                  value:
                    display: Test user
                    $ref: VRSAPI/scim/v2/Users/1
                    value: '1'
      responses:
        '200':
          description: Successfully added user to group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
    put:
      operationId: updateRoleById
      tags:
        - SCIM
      summary: Updates a VRS Group
      description: Updates (replaces) a VRS Group with the properties in the JSON
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimGroup'
      responses:
        '200':
          description: Successfully updated group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          headers:
            Location:
              schema:
                type: string
              description: >-
                A callback URL to the updated group, for example
                https://example.com/VRSAPI/scim/v2/Groups/1
        '403':
          description: Forbidden, user does not have permission to update groups
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to update groups
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
ror
                detail: Resource 1 not found
                status: '404'
    delete:
      operationId: deleteRoleById
      tags:
        - SCIM
      summary: Deletes a VRS role
      description: Deletes a VRS role
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden, user does not have permission to delete roles
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to delete roles
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
    patch:
      operationId: patchRoleById
      tags:
        - SCIM
      summary: Add or remove a user to/from a group
      description: Adds or removes a VRS user to/from a VRS role
      parameters:
        - in: path
          name: groupId
          description: The ID of the role
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimRolePatchRequestBody'
            example:
              schemas:
                - urn:ietf:params:scim:api:messages:2.0:PatchOp
              Operations:
                - op: add
                  path: members
                  value:
                    display: Test user
                    $ref: VRSAPI/scim/v2/Users/1
                    value: '1'
      responses:
        '200':
          description: Successfully added user to group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
    put:
      operationId: updateRoleById
      tags:
        - SCIM
      summary: Updates a VRS Group
      description: Updates (replaces) a VRS Group with the properties in the JSON
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimGroup'
      responses:
        '200':
          description: Successfully updated group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          headers:
            Location:
              schema:
                type: string
              description: >-
                A callback URL to the updated group, for example
                https://example.com/VRSAPI/scim/v2/Groups/1
        '403':
          description: Forbidden, user does not have permission to update groups
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to update groups
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
  summary: Add or remove a user to/from a group
      description: Adds or removes a VRS user to/from a VRS role
      parameters:
        - in: path
          name: groupId
          description: The ID of the role
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimRolePatchRequestBody'
            example:
              schemas:
                - urn:ietf:params:scim:api:messages:2.0:PatchOp
              Operations:
                - op: add
                  path: members
                  value:
                    display: Test user
                    $ref: VRSAPI/scim/v2/Users/1
                    value: '1'
      responses:
        '200':
          description: Successfully added user to group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
    put:
      operationId: updateRoleById
      tags:
        - SCIM
      summary: Updates a VRS Group
      description: Updates (replaces) a VRS Group with the properties in the JSON
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimGroup'
      responses:
        '200':
          description: Successfully updated group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          headers:
            Location:
              schema:
                type: string
              description: >-
                A callback URL to the updated group, for example
                https://example.com/VRSAPI/scim/v2/Groups/1
        '403':
          description: Forbidden, user does not have permission to update groups
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to update groups
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
      description: Deletes a VRS role
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden, user does not have permission to delete roles
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to delete roles
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
    patch:
      operationId: patchRoleById
      tags:
        - SCIM
      summary: Add or remove a user to/from a group
      description: Adds or removes a VRS user to/from a VRS role
      parameters:
        - in: path
          name: groupId
          description: The ID of the role
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimRolePatchRequestBody'
            example:
              schemas:
                - urn:ietf:params:scim:api:messages:2.0:PatchOp
              Operations:
                - op: add
                  path: members
                  value:
                    display: Test user
                    $ref: VRSAPI/scim/v2/Users/1
                    value: '1'
      responses:
        '200':
          description: Successfully added user to group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
    put:
      operationId: updateRoleById
      tags:
        - SCIM
      summary: Updates a VRS Group
      description: Updates (replaces) a VRS Group with the properties in the JSON
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimGroup'
      responses:
        '200':
          description: Successfully updated group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          headers:
            Location:
              schema:
                type: string
              description: >-
                A callback URL to the updated group, for example
                https://example.com/VRSAPI/scim/v2/Groups/1
        '403':
          description: Forbidden, user does not have permission to update groups
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to update groups
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
ng
              description: >-
                A callback URL to the newly create role, for example
                https://example.com/VRSAPI/scim/v2/Groups/1
        '403':
          description: Forbidden, user does not have permission to view roles
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to view roles
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
    delete:
      operationId: deleteRoleById
      tags:
        - SCIM
      summary: Deletes a VRS role
      description: Deletes a VRS role
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden, user does not have permission to delete roles
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to delete roles
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
    patch:
      operationId: patchRoleById
      tags:
        - SCIM
      summary: Add or remove a user to/from a group
      description: Adds or removes a VRS user to/from a VRS role
      parameters:
        - in: path
          name: groupId
          description: The ID of the role
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimRolePatchRequestBody'
            example:
              schemas:
                - urn:ietf:params:scim:api:messages:2.0:PatchOp
              Operations:
                - op: add
                  path: members
                  value:
                    display: Test user
                    $ref: VRSAPI/scim/v2/Users/1
                    value: '1'
      responses:
        '200':
          description: Successfully added user to group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
    put:
      operationId: updateRoleById
      tags:
        - SCIM
      summary: Updates a VRS Group
      description: Updates (replaces) a VRS Group with the properties in the JSON
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimGroup'
      responses:
        '200':
          description: Successfully updated group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          headers:
            Location:
              schema:
                type: string
              description: >-
                A callback URL to the updated group, for example
                https://example.com/VRSAPI/scim/v2/Groups/1
        '403':
          description: Forbidden, user does not have permission to update groups
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to update groups
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
 operationId: deleteRoleById
      tags:
        - SCIM
      summary: Deletes a VRS role
      description: Deletes a VRS role
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden, user does not have permission to delete roles
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to delete roles
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
    patch:
      operationId: patchRoleById
      tags:
        - SCIM
      summary: Add or remove a user to/from a group
      description: Adds or removes a VRS user to/from a VRS role
      parameters:
        - in: path
          name: groupId
          description: The ID of the role
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimRolePatchRequestBody'
            example:
              schemas:
                - urn:ietf:params:scim:api:messages:2.0:PatchOp
              Operations:
                - op: add
                  path: members
                  value:
                    display: Test user
                    $ref: VRSAPI/scim/v2/Users/1
                    value: '1'
      responses:
        '200':
          description: Successfully added user to group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
    put:
      operationId: updateRoleById
      tags:
        - SCIM
      summary: Updates a VRS Group
      description: Updates (replaces) a VRS Group with the properties in the JSON
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimGroup'
      responses:
        '200':
          description: Successfully updated group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          headers:
            Location:
              schema:
                type: string
              description: >-
                A callback URL to the updated group, for example
                https://example.com/VRSAPI/scim/v2/Groups/1
        '403':
          description: Forbidden, user does not have permission to update groups
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to update groups
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
rams:scim:api:messages:2.0:PatchOp
              Operations:
                - op: add
                  path: members
                  value:
                    display: Test user
                    $ref: VRSAPI/scim/v2/Users/1
                    value: '1'
      responses:
        '200':
          description: Successfully added user to group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
    put:
      operationId: updateRoleById
      tags:
        - SCIM
      summary: Updates a VRS Group
      description: Updates (replaces) a VRS Group with the properties in the JSON
      parameters:
        - in: path
          name: groupId
          description: The ID of the group
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/scim+json:
            schema:
              $ref: '#/components/schemas/ScimGroup'
      responses:
        '200':
          description: Successfully updated group
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimGroup'
          headers:
            Location:
              schema:
                type: string
              description: >-
                A callback URL to the updated group, for example
                https://example.com/VRSAPI/scim/v2/Groups/1
        '403':
          description: Forbidden, user does not have permission to update groups
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: User does not have permission to update groups
                status: '403'
        '404':
          description: Not Found
          content:
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ScimError'
              example:
                schemas:
                  - urn:ietf:params:scim:api:messages:2.0:Error
                detail: Resource 1 not found
                status: '404'
